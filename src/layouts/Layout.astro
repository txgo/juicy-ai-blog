---
import '../styles/globals.css';

export interface Props {
  title: string;
  description?: string;
  lang?: string;
}

const { title, description = "Juicy AI - Personal Blog about AI, Technology, and Innovation", lang = "zh-CN" } = Astro.props;

// Determine current locale from URL
const currentPath = Astro.url.pathname;
const isEnglish = currentPath.startsWith('/en/') || currentPath === '/en';
const currentLang = isEnglish ? 'en' : 'zh-CN';
const currentLangCode = isEnglish ? 'en' : 'zh-cn';

// Hide language switcher on Chinese blog pages since they're Chinese-specific content
const isChineseBlogPage = currentPath.startsWith('/blog/') && !isEnglish;
const showLanguageSwitcher = !isChineseBlogPage;

// Navigation labels
const nav = {
  'zh-cn': {
    home: '首页',
    blog: '博客',
    about: '关于'
  },
  'en': {
    home: 'Home',
    blog: 'Blog', 
    about: 'About'
  }
};

// Base path for navigation
const basePath = isEnglish ? `${import.meta.env.BASE_URL}en/` : import.meta.env.BASE_URL;
---

<!doctype html>
<html lang={currentLang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href={`${import.meta.env.BASE_URL}favicon.svg`} />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="bg-base-100 text-base-content">
    <header class="bg-base-100 shadow-sm border-b border-base-200">
      <div class="navbar max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="navbar-start">
          <a href={import.meta.env.BASE_URL} class="btn btn-ghost text-xl text-primary font-bold">Juicy AI</a>
        </div>
        
        <div class="navbar-end">
          <ul class="menu menu-horizontal px-1 space-x-2">
            <li><a href={basePath} class="whitespace-nowrap">{nav[currentLangCode].home}</a></li>
            <li><a href={`${basePath}blog/`} class="whitespace-nowrap">{nav[currentLangCode].blog}</a></li>
            <li><a href={`${basePath}about/`} class="whitespace-nowrap">{nav[currentLangCode].about}</a></li>
          </ul>
          <div class="hidden md:flex items-center space-x-4">
            <!-- Language Switch -->
            <div class="join">
              <a href={isEnglish ? import.meta.env.BASE_URL : `${import.meta.env.BASE_URL}`} 
                 class={`join-item btn btn-sm ${!isEnglish ? 'btn-active' : ''}`}>中文</a>
              <a href={isEnglish ? `${import.meta.env.BASE_URL}en/` : `${import.meta.env.BASE_URL}en/`} 
                 class={`join-item btn btn-sm ${isEnglish ? 'btn-active' : ''}`}>EN</a>
            </div>
            <!-- Theme Controller -->
            <select class="select select-sm bg-base-200" data-choose-theme aria-label="Choose theme">
              <option value="light">Light</option>
              <option value="dark">Dark</option>
              <option value="valentine">Valentine</option>
              <option value="cyberpunk">Cyberpunk</option>
              <option value="synthwave">Synthwave</option>
              <option value="retro">Retro</option>
              <option value="aqua">Aqua</option>
              <option value="luxury">Luxury</option>
              <option value="dracula">Dracula</option>
            </select>
          </div>
          <div class="md:hidden">
            <button class="btn btn-ghost btn-square" aria-label="Open navigation menu">
              <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
              </svg>
            </button>
          </div>
        </div>
      </div>
    </header>

    <main>
      <slot />
    </main>

    <footer class="bg-neutral text-neutral-content mt-16">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div class="text-center">
          <p>&copy; 2025 Juicy AI. All rights reserved.</p>
        </div>
      </div>
    </footer>
    
    <script>
      // Theme controller functionality
      const themeController = document.querySelector('[data-choose-theme]');
      const htmlElement = document.documentElement;
      
      // Set initial theme
      const savedTheme = localStorage.getItem('theme') || 'light';
      htmlElement.setAttribute('data-theme', savedTheme);
      if (themeController) themeController.value = savedTheme;
      
      // Handle theme changes
      if (themeController) {
        themeController.addEventListener('change', function() {
          const selectedTheme = this.value;
          htmlElement.setAttribute('data-theme', selectedTheme);
          localStorage.setItem('theme', selectedTheme);
        });
      }
    </script>
  </body>
</html>